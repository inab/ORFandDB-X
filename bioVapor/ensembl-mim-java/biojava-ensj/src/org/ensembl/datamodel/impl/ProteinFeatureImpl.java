/* Generated by Together */

package org.ensembl.datamodel.impl;

import java.util.List;

import org.ensembl.datamodel.Analysis;
import org.ensembl.datamodel.Location;
import org.ensembl.datamodel.ProteinFeature;
import org.ensembl.datamodel.Sequence;
import org.ensembl.datamodel.Translation;
import org.ensembl.driver.CoreDriver;

/**
 * @author <a href="mailto:frans.verhoef@travel-companion.net">Frans Verhoef
 *         </a>
 */
public class ProteinFeatureImpl extends BaseFeatureImpl implements
		ProteinFeature {

	/**
	 * Used by the (de)serialization system to determine if the data in a
	 * serialized instance is compatible with this class.
	 * 
	 * It's presence allows for compatible serialized objects to be loaded when
	 * the class is compatible with the serialized instance, even if:
	 * 
	 * <ul>
	 * <li>the compiler used to compile the "serializing" version of the class
	 * differs from the one used to compile the "deserialising" version of the
	 * class.</li>
	 * 
	 * <li>the methods of the class changes but the attributes remain the same.
	 * </li>
	 * </ul>
	 * 
	 * Maintainers must change this value if and only if the new version of this
	 * class is not compatible with old versions. e.g. attributes change. See
	 * Sun docs for <a
	 * href="http://java.sun.com/j2se/1.4.2/docs/guide/serialization/"> details.
	 * </a>
	 *  
	 */
	private static final long serialVersionUID = 1L;

	private int peptideStart;

	private int peptideEnd;

	private long translationInternalID;

	private Translation translation;

	private int translationStart;
	
	private Analysis analysis;

	private String displayName;

	private Sequence sequence;

	private String interproAccession;

	private String interproDescription;

	private double score;
	
	private double evalue;
	
	private double percentageIdentity;
	
	private int translationEnd;

  private String interproDisplayName;
	
	public ProteinFeatureImpl() {
	}

	public ProteinFeatureImpl(CoreDriver driver) {
		super(driver);
	}

	public int getPeptideStart() {
		return peptideStart;
	}

	public void setPeptideStart(int peptideStart) {
		this.peptideStart = peptideStart;
	}

	public int getPeptideEnd() {
		return peptideEnd;
	}

	public void setPeptideEnd(int peptideEnd) {
		this.peptideEnd = peptideEnd;
	}

	public long getTranslationInternalID() {
		if (translation != null)
			translationInternalID = translation.getInternalID();
		return translationInternalID;
	}

	public void setTranslationInternalID(long translationInternalID) {
		this.translationInternalID = translationInternalID;
		if (translation != null)
			translation.setInternalID(translationInternalID);
	}

	public Translation getTranslation() {
		return translation;
	}

	public void setTranslation(Translation translation) {
		this.translation = translation;
	}

	public Analysis getAnalysis() {
		return analysis;
	}

	public void setAnalysis(Analysis analysis) {
		this.analysis = analysis;
	}

	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	public String toString() {
	  getLocation(); // force location to be caclulated
		StringBuffer buf = new StringBuffer();
		buf.append("[");
		buf.append(super.toString());
		buf.append(", peptideStart=").append(peptideStart);
		buf.append(", peptideEnd=").append(peptideEnd);
		buf.append(", displayName=").append(displayName);
		buf.append(", analysis=").append(
				((analysis == null) ? "unset" : analysis.getLogicalName()));
		buf.append(", score=").append(score);
		buf.append(", evalue=").append(evalue);
		buf.append(", percentageIdentity=").append(percentageIdentity);
		buf.append(", interproAccesion=").append(interproAccession);
		buf.append(", interproDisplayName=").append(interproDisplayName);
		buf.append(", interproDescription=").append(interproDescription);
		buf.append(", translationInternalID=").append(translationInternalID);
		buf.append(", translation=").append(translation);
		buf.append("]");
		return buf.toString();
	}

	

	public int getTranslationStart() {
		return translationStart;
	}

	public void setTranslationStart(int translationStart) {
		this.translationStart = translationStart;
	}

	

	public int getTranslationEnd() {
		return translationEnd;
	}

	public void setTranslationEnd(int translationEnd) {
		this.translationEnd = translationEnd;
	}

	
	public double getScore() {
		return score;
	}

	public void setScore(double score) {
		this.score = score;
	}

	

	public double getEvalue() {
		return evalue;
	}

	public void setEvalue(double evalue) {
		this.evalue = evalue;
	}

	

	public double getPercentageIdentity() {
		return percentageIdentity;
	}

	public void setPercentageIdentity(double percentageIdentity) {
		this.percentageIdentity = percentageIdentity;
	}

	public Location getLocation() {
		if (location == null && translation != null)
			location = deriveLocationFromTranslation();

		return location;
	}

	private Location deriveLocationFromTranslation() {

		List locs = translation.getCodingLocations();
		if (locs.size() == 0)
			return null;

		Location head = (Location) locs.get(0);
		Location loc = head;
		for (int i = 1; i < locs.size(); ++i) {
			Location tmp = (Location) locs.get(i);
			loc.setNext(tmp);
			loc = tmp;
		}

		// Crop coding location
		final int startCrop = peptideStart * 3;
		final int endCrop = head.getLength() - (peptideEnd * 3);
		Location croppedLoc = head.transform(startCrop, endCrop);

		return croppedLoc;

	}

	public Sequence getSequence() {
		return sequence;
	}

	public void setSequence(Sequence sequence) {
		this.sequence = sequence;
	}



	/**
	 * @see org.ensembl.datamodel.ProteinFeature#getInterproAccession()
	 */
	public String getInterproAccession() {
		return interproAccession;
	}

	/**
	 * @see org.ensembl.datamodel.ProteinFeature#setInterproAccession(java.lang.String)
	 */
	public void setInterproAccession(String interproAccession) {
		this.interproAccession = interproAccession;
	}

	/**
	 * @see org.ensembl.datamodel.ProteinFeature#getInterproDescription()
	 */
	public String getInterproDescription() {
		return interproDescription;
	}

	/**
	 * @see org.ensembl.datamodel.ProteinFeature#setInterproDescription(java.lang.String)
	 */
	public void setInterproDescription(String interproDescription) {
		this.interproDescription = interproDescription;

	}

  /**
   * @see org.ensembl.datamodel.ProteinFeature#getInterproDisplayName()
   */
  public String getInterproDisplayName() {
    return interproDisplayName;
  }

  /**
   * @see org.ensembl.datamodel.ProteinFeature#setInterproDisplayName(java.lang.String)
   */
  public void setInterproDisplayName(String interproDisplayName) {
    this.interproDisplayName = interproDisplayName;
  }

}
