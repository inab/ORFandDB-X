<?xml version="1.0" encoding="ISO-8859-1"?>
<xsd:schema targetNamespace="http://www.pdg.cnb.uam.es/jmfernandez/ORFandDB/4.0/filter/1.0" xmlns="http://www.pdg.cnb.uam.es/jmfernandez/ORFandDB/4.0/filter/1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>ORFandDB/X filters definition.  These are the base bricks of the update system. So, definitions must be adequate enough!</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="filterList">
    <xsd:annotation>
      <xsd:documentation><![CDATA[A set of filter definitions. The whole definition names list must have the uniquenes property.]]></xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="1" name="filter">
          <xsd:annotation>
            <xsd:documentation><![CDATA[A single filter definition. A filter can be either a program or a Java class.]]></xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation><![CDATA[This is an optional description of the filter]]></xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:choice maxOccurs="1" minOccurs="1">
                <xsd:element maxOccurs="1" minOccurs="1" name="class">
                  <xsd:annotation>
                    <xsd:documentation><![CDATA[This filter has been implemented by a Java class. That class follows ??? interface.]]></xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element maxOccurs="unbounded" minOccurs="0" name="library" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation><![CDATA[This element contains a path to a JAR to be loaded. There can be zero or more JAR to load.]]></xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="import" type="xsd:string" use="required">
                      <xsd:annotation>
                        <xsd:documentation><![CDATA[This attribute has the class to be loaded using Class.forName]]></xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element maxOccurs="1" minOccurs="1" name="program">
                  <xsd:annotation>
                    <xsd:documentation><![CDATA[This filter has been implemented by a program. Java class ??? is the responsible of the instances of this filter.]]></xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element maxOccurs="unbounded" minOccurs="1" name="paramSet">
                        <xsd:annotation>
                          <xsd:documentation><![CDATA[Programs have at least one parameter set. Each parameter set describes a set of "compatible" parameters.]]></xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element name="param">
                              <xsd:annotation>
                                <xsd:documentation><![CDATA[Each usable parameter must be described]]></xsd:documentation>
                              </xsd:annotation>
                              <xsd:complexType>
                                <xsd:choice>
                                  <xsd:element name="switch">
                                    <xsd:annotation>
                                      <xsd:documentation><![CDATA[Switch class of flag]]></xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                      <xsd:attribute name="paramOn" type="xsd:string" use="required"/>
                                      <xsd:attribute name="paramOff" type="xsd:string" use="optional"/>
                                    </xsd:complexType>
                                  </xsd:element>
                                  <xsd:element name="value">
                                    <xsd:annotation>
                                      <xsd:documentation><![CDATA[Value class of flag]]></xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                      <xsd:attribute name="param" type="xsd:string" use="required"/>
                                      <xsd:attribute default="false" name="valJoin" type="xsd:boolean" use="optional"/>
                                    </xsd:complexType>
                                  </xsd:element>
                                </xsd:choice>
                                <xsd:attribute name="name" type="xsd:string" use="required"/>
                                <xsd:attribute name="optional" type="xsd:boolean" use="required"/>
                                <xsd:attribute name="default" type="xsd:string" use="optional"/>
                              </xsd:complexType>
                            </xsd:element>
                          </xsd:sequence>
                          <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                        <xsd:key name="paramKey">
                          <xsd:annotation>
                            <xsd:documentation><![CDATA[Each param must have its own name.]]></xsd:documentation>
                          </xsd:annotation>
                          <xsd:selector xpath="param"/>
                          <xsd:field xpath="@name"/>
                        </xsd:key>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="path" type="xsd:string" use="required"/>
                  </xsd:complexType>
                  <xsd:key name="paramSetKey">
                    <xsd:annotation>
                      <xsd:documentation><![CDATA[Each paramSet must have its own name.]]></xsd:documentation>
                    </xsd:annotation>
                    <xsd:selector xpath="paramSet"/>
                    <xsd:field xpath="@name"/>
                  </xsd:key>
                </xsd:element>
              </xsd:choice>
            </xsd:sequence>
            <xsd:attribute name="name" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation><![CDATA[The symbolic filter name. This name will be used by database workflows, when steps have been defined.]]></xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
    <xsd:key name="filterKey">
      <xsd:annotation>
        <xsd:documentation><![CDATA[This key assures that all the filter names are distinct.]]></xsd:documentation>
      </xsd:annotation>
      <xsd:selector xpath="filter"/>
      <xsd:field xpath="@name"/>
    </xsd:key>
  </xsd:element>
</xsd:schema>
