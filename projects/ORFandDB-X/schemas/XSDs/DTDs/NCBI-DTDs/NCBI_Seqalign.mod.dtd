<!-- ============================================
     ::DATATOOL:: Generated from "seqalign.asn"
     ::DATATOOL:: by application DATATOOL version 1.5.0
     ::DATATOOL:: on 06/06/2006 23:03:48
     ============================================ -->

<!-- ============================================ -->
<!-- This section is mapped from module "NCBI-Seqalign"
================================================= -->
<!--
$Revision: 6.0 $
**********************************************************************

  NCBI Sequence Alignment elements
  by James Ostell, 1990

**********************************************************************
-->
<!-- Elements used by other modules:
          Seq-align,
          Score,
          Score-set,
          Seq-align-set -->

<!-- Elements referenced from other modules:
          Seq-id,
          Seq-loc,
          Na-strand FROM NCBI-Seqloc,
          Object-id FROM NCBI-General -->

<!-- ============================================ -->


<!--
*** Sequence Alignment ********************************
*
-->

<!ELEMENT Seq-align-set (Seq-align*)>

<!ELEMENT Seq-align (
        Seq-align_type, 
        Seq-align_dim?, 
        Seq-align_score?, 
        Seq-align_segs, 
        Seq-align_bounds?)>

<!ELEMENT Seq-align_type %ENUM;>
<!ATTLIST Seq-align_type value (
        not-set |
        global |
        diags |
        partial |
        disc |
        other ) #REQUIRED >
<!--
    diags -  unbroken, but not ordered, diagonals
    partial -  mapping pieces together
    disc -  discontinuous alignment
-->

<!ELEMENT Seq-align_dim (%INTEGER;)> <!-- dimensionality -->
<!ELEMENT Seq-align_score (Score*)> <!-- for whole alignment -->
<!-- alignment data -->


<!ELEMENT Seq-align_segs (
        Seq-align_segs_dendiag | 
        Seq-align_segs_denseg | 
        Seq-align_segs_std | 
        Seq-align_segs_packed | 
        Seq-align_segs_disc)>

<!ELEMENT Seq-align_segs_dendiag (Dense-diag*)>
<!ELEMENT Seq-align_segs_denseg (Dense-seg)>
<!ELEMENT Seq-align_segs_std (Std-seg*)>
<!ELEMENT Seq-align_segs_packed (Packed-seg)>
<!ELEMENT Seq-align_segs_disc (Seq-align-set)>
<!ELEMENT Seq-align_bounds (Seq-loc*)> <!-- regions of sequence over which align -->
<!-- for (multiway) diagonals -->


<!ELEMENT Dense-diag (
        Dense-diag_dim?, 
        Dense-diag_ids, 
        Dense-diag_starts, 
        Dense-diag_len, 
        Dense-diag_strands?, 
        Dense-diag_scores?)>

<!ELEMENT Dense-diag_dim (%INTEGER;)> <!-- dimensionality -->
<!ELEMENT Dense-diag_ids (Seq-id*)> <!-- sequences in order -->
<!ELEMENT Dense-diag_starts (Dense-diag_starts_E*)> <!-- start OFFSETS in ids order -->
<!ELEMENT Dense-diag_starts_E (%INTEGER;)>
<!ELEMENT Dense-diag_len (%INTEGER;)> <!-- len of aligned segments -->
<!ELEMENT Dense-diag_strands (Na-strand*)>
<!ELEMENT Dense-diag_scores (Score*)>
<!-- for (multiway) global or partial alignments -->


<!ELEMENT Dense-seg (
        Dense-seg_dim?, 
        Dense-seg_numseg, 
        Dense-seg_ids, 
        Dense-seg_starts, 
        Dense-seg_lens, 
        Dense-seg_strands?, 
        Dense-seg_scores?)>

<!ELEMENT Dense-seg_dim (%INTEGER;)> <!-- dimensionality -->
<!ELEMENT Dense-seg_numseg (%INTEGER;)> <!-- number of segments here -->
<!ELEMENT Dense-seg_ids (Seq-id*)> <!-- sequences in order -->
<!ELEMENT Dense-seg_starts (Dense-seg_starts_E*)> <!-- start OFFSETS in ids order within segs -->
<!ELEMENT Dense-seg_starts_E (%INTEGER;)>
<!ELEMENT Dense-seg_lens (Dense-seg_lens_E*)> <!-- lengths in ids order within segs -->
<!ELEMENT Dense-seg_lens_E (%INTEGER;)>
<!ELEMENT Dense-seg_strands (Na-strand*)>
<!ELEMENT Dense-seg_scores (Score*)> <!-- score for each seg -->
<!-- for (multiway) global or partial alignments -->


<!ELEMENT Packed-seg (
        Packed-seg_dim?, 
        Packed-seg_numseg, 
        Packed-seg_ids, 
        Packed-seg_starts, 
        Packed-seg_present, 
        Packed-seg_lens, 
        Packed-seg_strands?, 
        Packed-seg_scores?)>

<!ELEMENT Packed-seg_dim (%INTEGER;)> <!-- dimensionality -->
<!ELEMENT Packed-seg_numseg (%INTEGER;)> <!-- number of segments here -->
<!ELEMENT Packed-seg_ids (Seq-id*)> <!-- sequences in order -->
<!ELEMENT Packed-seg_starts (Packed-seg_starts_E*)> <!-- start OFFSETS in ids order for whole alignment -->
<!ELEMENT Packed-seg_starts_E (%INTEGER;)>
<!--
 Boolean if each sequence present or absent in
   each segment
-->

<!ELEMENT Packed-seg_present (%OCTETS;)>
<!ELEMENT Packed-seg_lens (Packed-seg_lens_E*)> <!-- length of each segment -->
<!ELEMENT Packed-seg_lens_E (%INTEGER;)>
<!ELEMENT Packed-seg_strands (Na-strand*)>
<!ELEMENT Packed-seg_scores (Score*)> <!-- score for each segment -->

<!ELEMENT Std-seg (
        Std-seg_dim?, 
        Std-seg_ids?, 
        Std-seg_loc, 
        Std-seg_scores?)>

<!ELEMENT Std-seg_dim (%INTEGER;)> <!-- dimensionality -->
<!ELEMENT Std-seg_ids (Seq-id*)>
<!ELEMENT Std-seg_loc (Seq-loc*)>
<!ELEMENT Std-seg_scores (Score*)>

<!ELEMENT Score (
        Score_id?, 
        Score_value)>

<!ELEMENT Score_id (Object-id)>

<!ELEMENT Score_value (
        Score_value_real | 
        Score_value_int)>

<!ELEMENT Score_value_real (%REAL;)>
<!ELEMENT Score_value_int (%INTEGER;)>
<!ELEMENT Score-set (Score*)>

