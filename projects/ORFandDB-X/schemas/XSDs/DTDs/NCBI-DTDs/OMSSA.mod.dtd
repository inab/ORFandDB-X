<!-- ============================================
     ::DATATOOL:: Generated from "omssa.asn"
     ::DATATOOL:: by application DATATOOL version 1.6.3
     ::DATATOOL:: on 09/05/2006 23:03:49
     ============================================ -->

<!-- ============================================ -->
<!-- This section is mapped from module "OMSSA"
================================================= -->
<!--
 $Id: omssa.asn,v 1.34 2006/09/05 18:03:48 lewisg Exp $
**********************************************************************

  OMSSA (Open Mass Spectrometry Search Algorithm) data definitions
  Lewis Geer, 2003

  make using something like
  "datatool -m omssa.asn -oc ObjOmssa -oA -od omssa.def"

  note that this file requires omssa.def

**********************************************************************
-->
<!-- Elements referenced from other modules:
          Bioseq FROM NCBI-Sequence -->

<!-- ============================================ -->


<!-- Generic holder for experimental info -->


<!ELEMENT NameValue (
        NameValue_name, 
        NameValue_value)>

<!ELEMENT NameValue_name (#PCDATA)>
<!ELEMENT NameValue_value (#PCDATA)>

<!ELEMENT MSSpectrum (
        MSSpectrum_number, 
        MSSpectrum_charge, 
        MSSpectrum_precursormz, 
        MSSpectrum_mz, 
        MSSpectrum_abundance, 
        MSSpectrum_iscale, 
        MSSpectrum_ids?, 
        MSSpectrum_namevalue?)>

<!ELEMENT MSSpectrum_number (%INTEGER;)> <!-- unique number of spectrum -->
<!ELEMENT MSSpectrum_charge (MSSpectrum_charge_E*)> <!-- may be more than one if unknown -->
<!ELEMENT MSSpectrum_charge_E (%INTEGER;)>
<!ELEMENT MSSpectrum_precursormz (%INTEGER;)> <!-- scaled precursor m/z, scale is in MSSearchSettings -->
<!ELEMENT MSSpectrum_mz (MSSpectrum_mz_E*)> <!-- scaled product m/z -->
<!ELEMENT MSSpectrum_mz_E (%INTEGER;)>
<!ELEMENT MSSpectrum_abundance (MSSpectrum_abundance_E*)> <!-- scaled product abundance -->
<!ELEMENT MSSpectrum_abundance_E (%INTEGER;)>
<!ELEMENT MSSpectrum_iscale (%REAL;)> <!-- abundance scale, float to integer -->
<!ELEMENT MSSpectrum_ids (MSSpectrum_ids_E*)> <!-- ids/filenames -->
<!ELEMENT MSSpectrum_ids_E (#PCDATA)>
<!ELEMENT MSSpectrum_namevalue (NameValue*)> <!-- extra info: retention times, etc. -->
<!ELEMENT MSSpectrumset (MSSpectrum*)>
<!ELEMENT MSEnzymes (%INTEGER;)>
<!ATTLIST MSEnzymes value (
        trypsin |
        argc |
        cnbr |
        chymotrypsin |
        formicacid |
        lysc |
        lysc-p |
        pepsin-a |
        tryp-cnbr |
        tryp-chymo |
        trypsin-p |
        whole-protein |
        aspn |
        gluc |
        aspngluc |
        top-down |
        semi-tryptic |
        no-enzyme |
        chymotrypsin-p |
        aspn-de |
        gluc-de |
        max |
        none ) #IMPLIED >

<!ELEMENT MSMod (%INTEGER;)>
<!ATTLIST MSMod value (
        methylk |
        oxym |
        carboxymethylc |
        carbamidomethylc |
        deamidationkq |
        propionamidec |
        phosphorylations |
        phosphorylationt |
        phosphorylationy |
        ntermmcleave |
        ntermacetyl |
        ntermmethyl |
        ntermtrimethyl |
        methythiold |
        methylq |
        trimethylk |
        methyld |
        methyle |
        ctermpepmethyl |
        trideuteromethyld |
        trideuteromethyle |
        ctermpeptrideuteromethyl |
        nformylmet |
        twoamino3oxobutanoicacid |
        acetylk |
        ctermamide |
        bmethylthiold |
        carbamidomethylk |
        carbamidometylh |
        carbamidomethyld |
        carbamidomethyle |
        carbamylk |
        ntermcarbamyl |
        citrullinationr |
        cysteicacidc |
        diiodinationy |
        dimethylk |
        dimethylr |
        ntermpepdimethyl |
        dihydroxyf |
        thioacetylk |
        ntermpeptioacetyl |
        farnesylationc |
        formylk |
        ntermpepformyl |
        formylkynureninw |
        phef |
        gammacarboxyld |
        gammacarboxyle |
        geranylgeranylc |
        ntermpepglucuronylg |
        glutathionec |
        glyglyk |
        guanidinationk |
        his2asnh |
        his2asph |
        ctermpephsem |
        ctermpephselactm |
        hydroxykynureninw |
        hydroxylationd |
        hydroxylationk |
        hydroxylationn |
        hydroxylationp |
        hydroxylationf |
        hydroxylationy |
        iodinationy |
        kynureninw |
        lipoylk |
        ctermpepmeester |
        meesterd |
        meestere |
        meesters |
        meestery |
        methylc |
        methylh |
        methyln |
        ntermpepmethyl |
        methylr |
        ntermpepmyristoyeylationg |
        ntermpepmyristoyl4hg |
        ntermpepmyristoylationg |
        myristoylationk |
        ntermformyl |
        nemc |
        nipcam |
        nitrow |
        nitroy |
        ctermpepo18 |
        ctermpepdio18 |
        oxyh |
        oxyw |
        ppantetheines |
        palmitoylationc |
        palmitoylationk |
        palmitoylations |
        palmitoylationt |
        phospholosss |
        phospholosst |
        phospholossy |
        phosphoneutrallossc |
        phosphoneutrallossd |
        phosphoneutrallossh |
        propionylk |
        ntermpeppropionyl |
        propionylheavyk |
        ntermpeppropionylheavy |
        pyridylk |
        ntermpeppyridyl |
        ntermpeppyrocmc |
        ntermpeppyroe |
        ntermpeppyroq |
        pyroglutamicp |
        spyridylethylc |
        semetm |
        sulfationy |
        suphonem |
        triiodinationy |
        trimethylationr |
        ntermpeptripalmitatec |
        usermod1 |
        usermod2 |
        usermod3 |
        usermod4 |
        usermod5 |
        usermod6 |
        usermod7 |
        usermod8 |
        usermod9 |
        usermod10 |
        icatlight |
        icatheavy |
        camthiopropanoylk |
        phosphoneutrallosss |
        phosphoneutrallosst |
        phosphoetdlosss |
        phosphoetdlosst |
        arg-13c6 |
        arg-13c6-15n4 |
        lys-13c6 |
        oxy18 |
        beta-elim-s |
        beta-elim-t |
        usermod11 |
        usermod12 |
        usermod13 |
        usermod14 |
        usermod15 |
        usermod16 |
        usermod17 |
        usermod18 |
        usermod19 |
        usermod20 |
        max |
        none ) #IMPLIED >
<!--
    methylk -  methylation of K
    oxym -  oxidation of methionine
    carboxymethylc -  carboxymethyl cysteine
    carbamidomethylc -  carbamidomethyl cysteine
    deamidationkq -  deamidation of K and Q
    propionamidec -  propionamide cysteine
    phosphorylations -  phosphorylation of S
    phosphorylationt -  phosphorylation of T
    phosphorylationy -  phosphorylation of Y    
    ntermmcleave -  N terminal methionine cleavage
    ntermacetyl -  N terminal protein acetyl
    ntermmethyl -  N terminal protein methyl
    ntermtrimethyl -  N terminal protein trimethyl
    methythiold -  beta methythiolation of D
    methylq -  methylation of Q
    trimethylk -  trimethylation of K
    methyld -  methylation of D
    methyle -  methylation of E
    ctermpepmethyl -  C terminal methylation
    trideuteromethyld -  trideuteromethylation of D
    trideuteromethyle -  trideuteromethylation of E
    ctermpeptrideuteromethyl -  C terminal trideuteromethylation
    usermod1 -  start of user defined mods
    usermod10 -  end of user defined mods
    max -  maximum number of mods
-->

<!ELEMENT MSModType (%INTEGER;)>
<!ATTLIST MSModType value (
        modaa |
        modn |
        modnaa |
        modc |
        modcaa |
        modnp |
        modnpaa |
        modcp |
        modcpaa |
        modmax ) #IMPLIED >
<!--
    modaa -  at particular amino acids
    modn -  at the N terminus of a protein
    modnaa -  at the N terminus of a protein at particular amino acids
    modc -  at the C terminus of a protein
    modcaa -  at the C terminus of a protein at particular amino acids
    modnp -  at the N terminus of a peptide
    modnpaa -  at the N terminus of a peptide at particular amino acids
    modcp -  at the C terminus of a peptide
    modcpaa -  at the C terminus of a peptide at particular amino acids
    modmax -  the max number of modification types
-->


<!ELEMENT MSMassSet (
        MSMassSet_monomass, 
        MSMassSet_averagemass, 
        MSMassSet_n15mass)>

<!ELEMENT MSMassSet_monomass (%REAL;)>
<!ELEMENT MSMassSet_averagemass (%REAL;)>
<!ELEMENT MSMassSet_n15mass (%REAL;)>

<!ELEMENT MSModSpec (
        MSModSpec_mod, 
        MSModSpec_type, 
        MSModSpec_name, 
        MSModSpec_monomass, 
        MSModSpec_averagemass, 
        MSModSpec_n15mass, 
        MSModSpec_residues?, 
        MSModSpec_neutralloss?)>

<!ELEMENT MSModSpec_mod (MSMod)> <!-- what is the mod -->
<!ELEMENT MSModSpec_type (MSModType)> <!-- modification type -->
<!ELEMENT MSModSpec_name (#PCDATA)> <!-- friendly name of mod -->
<!ELEMENT MSModSpec_monomass (%REAL;)> <!-- monoisotopic mass -->
<!ELEMENT MSModSpec_averagemass (%REAL;)> <!-- average mass -->
<!ELEMENT MSModSpec_n15mass (%REAL;)> <!-- monoisotopic n15 mass -->
<!ELEMENT MSModSpec_residues (MSModSpec_residues_E*)> <!-- residues to apply mod to -->
<!ELEMENT MSModSpec_residues_E (#PCDATA)>
<!ELEMENT MSModSpec_neutralloss (MSMassSet)> <!-- loss after precursor mass determination -->
<!ELEMENT MSModSpecSet (MSModSpec*)>
<!ELEMENT MSCalcPlusOne (%INTEGER;)>
<!ATTLIST MSCalcPlusOne value (
        dontcalc |
        calc ) #IMPLIED >
<!--
    dontcalc -  don't guess charge one
    calc -  guess charge one
-->

<!ELEMENT MSCalcCharge (%INTEGER;)>
<!ATTLIST MSCalcCharge value (
        calculate |
        usefile |
        userange ) #IMPLIED >
<!--
    calculate -  guess the charge(s) from the data
    usefile -  use what the input file says
    userange -  use the charge range specified
-->


<!ELEMENT MSChargeHandle (
        MSChargeHandle_calcplusone?, 
        MSChargeHandle_calccharge?, 
        MSChargeHandle_mincharge?, 
        MSChargeHandle_maxcharge?, 
        MSChargeHandle_considermult?, 
        MSChargeHandle_plusone, 
        MSChargeHandle_maxproductcharge?)>

<!ELEMENT MSChargeHandle_calcplusone (MSCalcPlusOne)> <!-- do we guess charge one? -->
<!ELEMENT MSChargeHandle_calccharge (MSCalcCharge)> <!-- how do we handle charges? -->
<!ELEMENT MSChargeHandle_mincharge (%INTEGER;)> <!-- if userange, what is the min? -->
<!ELEMENT MSChargeHandle_maxcharge (%INTEGER;)> <!-- if userange, what is the max? -->
<!ELEMENT MSChargeHandle_considermult (%INTEGER;)> <!-- at which precursor charge to consider +2 ions? -->
<!ELEMENT MSChargeHandle_plusone (%REAL;)> <!-- what % of peaks below precursor needed to call as +1 -->
<!ELEMENT MSChargeHandle_maxproductcharge (%INTEGER;)> <!-- maximum product ion charge -->
<!ELEMENT MSSearchType (%INTEGER;)>
<!ATTLIST MSSearchType value (
        monoisotopic |
        average |
        monon15 |
        exact |
        max ) #IMPLIED >

<!ELEMENT MSZdependence (%INTEGER;)>
<!ATTLIST MSZdependence value (
        independent |
        linearwithz |
        max ) #IMPLIED >
<!--
    independent -  mass tol. invariant with charge
    linearwithz -  mass tol. scales with charge
-->


<!ELEMENT MSIterativeSettings (
        MSIterativeSettings_researchthresh, 
        MSIterativeSettings_subsetthresh, 
        MSIterativeSettings_replacethresh)>

<!ELEMENT MSIterativeSettings_researchthresh (%REAL;)> <!-- e-val threshold for re-searching spectra, 0 = always re-search -->
<!ELEMENT MSIterativeSettings_subsetthresh (%REAL;)> <!-- e-val threshold for picking sequence subset, 0 = all sequences -->
<!ELEMENT MSIterativeSettings_replacethresh (%REAL;)> <!-- e-val threshold for replacing hitset, 0 = only if better -->

<!ELEMENT MSSearchSettings (
        MSSearchSettings_precursorsearchtype, 
        MSSearchSettings_productsearchtype, 
        MSSearchSettings_ionstosearch, 
        MSSearchSettings_peptol, 
        MSSearchSettings_msmstol, 
        MSSearchSettings_zdep, 
        MSSearchSettings_cutoff, 
        MSSearchSettings_cutlo, 
        MSSearchSettings_cuthi, 
        MSSearchSettings_cutinc, 
        MSSearchSettings_singlewin, 
        MSSearchSettings_doublewin, 
        MSSearchSettings_singlenum, 
        MSSearchSettings_doublenum, 
        MSSearchSettings_fixed, 
        MSSearchSettings_variable, 
        MSSearchSettings_enzyme, 
        MSSearchSettings_missedcleave, 
        MSSearchSettings_hitlistlen?, 
        MSSearchSettings_db, 
        MSSearchSettings_tophitnum, 
        MSSearchSettings_minhit?, 
        MSSearchSettings_minspectra?, 
        MSSearchSettings_scale?, 
        MSSearchSettings_maxmods?, 
        MSSearchSettings_taxids?, 
        MSSearchSettings_chargehandling?, 
        MSSearchSettings_usermods?, 
        MSSearchSettings_pseudocount?, 
        MSSearchSettings_searchb1?, 
        MSSearchSettings_searchctermproduct?, 
        MSSearchSettings_maxproductions?, 
        MSSearchSettings_minnoenzyme?, 
        MSSearchSettings_maxnoenzyme?, 
        MSSearchSettings_exactmass?, 
        MSSearchSettings_settingid?, 
        MSSearchSettings_iterativesettings?, 
        MSSearchSettings_precursorcull?, 
        MSSearchSettings_infiles?, 
        MSSearchSettings_outfiles?, 
        MSSearchSettings_nocorrelationscore?, 
        MSSearchSettings_probfollowingion?, 
        MSSearchSettings_nmethionine?, 
        MSSearchSettings_automassadjust?)>

<!ELEMENT MSSearchSettings_precursorsearchtype (MSSearchType)> <!-- average or monoisotopic? -->
<!ELEMENT MSSearchSettings_productsearchtype (MSSearchType)> <!-- average or monoisotopic? -->
<!ELEMENT MSSearchSettings_ionstosearch (MSIonType*)> <!-- which ions to search? -->
<!ELEMENT MSSearchSettings_peptol (%REAL;)> <!-- peptide mass tolerance -->
<!ELEMENT MSSearchSettings_msmstol (%REAL;)> <!-- msms mass tolerance -->
<!ELEMENT MSSearchSettings_zdep (MSZdependence)> <!-- what is the charge dependence of the mass tolerance? -->
<!--
 evalue cutoff
 next 3 fields define intensity fraction below
 which peaks will be discard
-->

<!ELEMENT MSSearchSettings_cutoff (%REAL;)>
<!ELEMENT MSSearchSettings_cutlo (%REAL;)> <!-- the start of the cutoff, fraction of most intense peak -->
<!ELEMENT MSSearchSettings_cuthi (%REAL;)> <!-- the end of the cutoff -->
<!ELEMENT MSSearchSettings_cutinc (%REAL;)> <!-- the increment of the cutoff -->
<!ELEMENT MSSearchSettings_singlewin (%INTEGER;)> <!-- the size of the single charge filtering window -->
<!ELEMENT MSSearchSettings_doublewin (%INTEGER;)> <!-- the size of the double charge filtering window -->
<!ELEMENT MSSearchSettings_singlenum (%INTEGER;)> <!-- the number of peaks allowed in the single window -->
<!ELEMENT MSSearchSettings_doublenum (%INTEGER;)> <!-- the number of peaks allowed in the double window -->
<!ELEMENT MSSearchSettings_fixed (MSMod*)> <!-- fixed PTM's -->
<!ELEMENT MSSearchSettings_variable (MSMod*)> <!-- variable PTM's -->
<!ELEMENT MSSearchSettings_enzyme (MSEnzymes)> <!-- digestion enzyme -->
<!ELEMENT MSSearchSettings_missedcleave (%INTEGER;)> <!-- number of missed cleaves allowed -->
<!--
 the number of hits kept in memory
 for a spectrum
-->

<!ELEMENT MSSearchSettings_hitlistlen (%INTEGER;)>
<!ELEMENT MSSearchSettings_db (#PCDATA)> <!-- sequence set to search, e.g. "nr" -->
<!ELEMENT MSSearchSettings_tophitnum (%INTEGER;)> <!-- number of m/z to consider in first pass -->
<!ELEMENT MSSearchSettings_minhit (%INTEGER;)> <!-- minimum number of m/z values for a valid hit -->
<!ELEMENT MSSearchSettings_minspectra (%INTEGER;)> <!-- minimum number of m/z for a valid spectra -->
<!ELEMENT MSSearchSettings_scale (%INTEGER;)> <!-- scale for m/z float to integer -->
<!--
 maximum number of mass ladders per
 database peptide
-->

<!ELEMENT MSSearchSettings_maxmods (%INTEGER;)>
<!ELEMENT MSSearchSettings_taxids (MSSearchSettings_taxids_E*)> <!-- taxa to limit search -->
<!ELEMENT MSSearchSettings_taxids_E (%INTEGER;)>
<!ELEMENT MSSearchSettings_chargehandling (MSChargeHandle)> <!-- how to deal with charges -->
<!ELEMENT MSSearchSettings_usermods (MSModSpecSet)> <!-- user defined modifications -->
<!ELEMENT MSSearchSettings_pseudocount (%INTEGER;)> <!-- min number of counts per precursor bin -->
<!ELEMENT MSSearchSettings_searchb1 (%INTEGER;)> <!-- should b1 product be in search (1=no, 0=yes) -->
<!ELEMENT MSSearchSettings_searchctermproduct (%INTEGER;)> <!-- should c terminus ion be searched (1=no, 0=yes) -->
<!ELEMENT MSSearchSettings_maxproductions (%INTEGER;)> <!-- max number of ions in each series (0=all) -->
<!ELEMENT MSSearchSettings_minnoenzyme (%INTEGER;)> <!-- min number of AA in peptide for noenzyme search -->
<!ELEMENT MSSearchSettings_maxnoenzyme (%INTEGER;)> <!-- max number of AA in peptide for noenzyme search (0=none) -->
<!ELEMENT MSSearchSettings_exactmass (%REAL;)> <!-- the threshold in Da for adding neutron -->
<!ELEMENT MSSearchSettings_settingid (%INTEGER;)> <!-- id of the search settings -->
<!ELEMENT MSSearchSettings_iterativesettings (MSIterativeSettings)> <!-- iterative search settings -->
<!ELEMENT MSSearchSettings_precursorcull (%INTEGER;)> <!-- turn on aggressive precursor culling for ETD (0=none) -->
<!ELEMENT MSSearchSettings_infiles (MSInFile*)> <!-- input files -->
<!ELEMENT MSSearchSettings_outfiles (MSOutFile*)> <!-- output files -->
<!ELEMENT MSSearchSettings_nocorrelationscore (%INTEGER;)> <!-- turn on correlation score (1=nocorr) -->
<!ELEMENT MSSearchSettings_probfollowingion (%REAL;)> <!-- probability of a consecutive ion (used in correlation) -->
<!ELEMENT MSSearchSettings_nmethionine EMPTY> <!-- should nmethionine be cleaved? -->
<!ATTLIST MSSearchSettings_nmethionine value ( true | false ) #REQUIRED >

<!ELEMENT MSSearchSettings_automassadjust (%REAL;)> <!-- fraction allowable adjustment of product mass tolerance -->
<!ELEMENT MSSerialDataFormat (%INTEGER;)>
<!ATTLIST MSSerialDataFormat value (
        none |
        asntext |
        asnbinary |
        xml |
        csv ) #IMPLIED >
<!--
    asntext -  open ASN.1 text format
    asnbinary -  open ASN.1 binary format
    xml -  open XML format
    csv -  csv (excel)
-->


<!ELEMENT MSOutFile (
        MSOutFile_outfile, 
        MSOutFile_outfiletype, 
        MSOutFile_includerequest)>

<!ELEMENT MSOutFile_outfile (#PCDATA)> <!-- output file name -->
<!ELEMENT MSOutFile_outfiletype (MSSerialDataFormat)> <!-- output file type -->
<!ELEMENT MSOutFile_includerequest EMPTY> <!-- should the output include the request? -->
<!ATTLIST MSOutFile_includerequest value ( true | false ) #REQUIRED >

<!ELEMENT MSSpectrumFileType (%INTEGER;)>
<!ATTLIST MSSpectrumFileType value (
        dta |
        dtablank |
        dtaxml |
        asc |
        pkl |
        pks |
        sciex |
        mgf |
        unknown |
        oms |
        omx ) #IMPLIED >
<!--
    oms -  asn.1 binary
    omx -  xml binary
-->


<!ELEMENT MSInFile (
        MSInFile_infile, 
        MSInFile_infiletype)>

<!ELEMENT MSInFile_infile (#PCDATA)> <!-- input file name -->
<!ELEMENT MSInFile_infiletype (MSSpectrumFileType)> <!-- input file type -->
<!ELEMENT MSSearchSettingsSet (MSSearchSettings*)>

<!ELEMENT MSRequest (
        MSRequest_spectra, 
        MSRequest_settings, 
        MSRequest_rid?, 
        MSRequest_moresettings?, 
        MSRequest_modset?)>

<!ELEMENT MSRequest_spectra (MSSpectrumset)> <!-- the set of spectra -->
<!ELEMENT MSRequest_settings (MSSearchSettings)> <!-- the search settings -->
<!ELEMENT MSRequest_rid (#PCDATA)> <!-- request id -->
<!ELEMENT MSRequest_moresettings (MSSearchSettingsSet)> <!-- additional search runs -->
<!ELEMENT MSRequest_modset (MSModSpecSet)> <!-- list of mods that can be used in search -->
<!ELEMENT MSIonType (%INTEGER;)>
<!ATTLIST MSIonType value (
        a |
        b |
        c |
        x |
        y |
        z |
        max ) #IMPLIED >


<!ELEMENT MSMZHit (
        MSMZHit_ion, 
        MSMZHit_charge, 
        MSMZHit_number, 
        MSMZHit_mz, 
        MSMZHit_index?)>

<!ELEMENT MSMZHit_ion (MSIonType)> <!-- ion type, e.g. b -->
<!ELEMENT MSMZHit_charge (%INTEGER;)> <!-- ion charge -->
<!ELEMENT MSMZHit_number (%INTEGER;)> <!-- the sequential number of the ion -->
<!ELEMENT MSMZHit_mz (%INTEGER;)> <!-- scaled m/z value in Da -->
<!ELEMENT MSMZHit_index (%INTEGER;)> <!-- the index of the peak in the original spectrum -->

<!ELEMENT MSPepHit (
        MSPepHit_start, 
        MSPepHit_stop, 
        MSPepHit_gi?, 
        MSPepHit_accession?, 
        MSPepHit_defline?, 
        MSPepHit_protlength?, 
        MSPepHit_oid?)>

<!ELEMENT MSPepHit_start (%INTEGER;)> <!-- start position (inclusive) in sequence -->
<!ELEMENT MSPepHit_stop (%INTEGER;)> <!-- stop position (inclusive) in sequence -->
<!ELEMENT MSPepHit_gi (%INTEGER;)> <!-- genbank identifier -->
<!ELEMENT MSPepHit_accession (#PCDATA)> <!-- sequence accession -->
<!ELEMENT MSPepHit_defline (#PCDATA)> <!-- sequence description -->
<!ELEMENT MSPepHit_protlength (%INTEGER;)> <!-- length of protein -->
<!ELEMENT MSPepHit_oid (%INTEGER;)> <!-- blast library oid (depricated)  -->

<!ELEMENT MSModHit (
        MSModHit_site, 
        MSModHit_modtype)>

<!ELEMENT MSModHit_site (%INTEGER;)> <!-- the position in the peptide -->
<!ELEMENT MSModHit_modtype (MSMod)> <!-- the type of modification -->

<!ELEMENT MSHits (
        MSHits_evalue, 
        MSHits_pvalue, 
        MSHits_charge, 
        MSHits_pephits, 
        MSHits_mzhits?, 
        MSHits_pepstring?, 
        MSHits_mass?, 
        MSHits_mods?, 
        MSHits_pepstart?, 
        MSHits_pepstop?, 
        MSHits_protlength?, 
        MSHits_theomass?, 
        MSHits_oid?)>

<!ELEMENT MSHits_evalue (%REAL;)> <!-- E-value (expect value) -->
<!ELEMENT MSHits_pvalue (%REAL;)> <!-- P-value (probability value) -->
<!ELEMENT MSHits_charge (%INTEGER;)> <!-- the charge state used in search.  -1 == not +1 -->
<!ELEMENT MSHits_pephits (MSPepHit*)> <!-- peptides that match this hit -->
<!ELEMENT MSHits_mzhits (MSMZHit*)> <!-- ions hit -->
<!ELEMENT MSHits_pepstring (#PCDATA)> <!-- the peptide sequence -->
<!ELEMENT MSHits_mass (%INTEGER;)> <!-- scaled experimental mass of peptide in Da -->
<!ELEMENT MSHits_mods (MSModHit*)> <!-- modifications to sequence -->
<!ELEMENT MSHits_pepstart (#PCDATA)> <!-- AA before the peptide -->
<!ELEMENT MSHits_pepstop (#PCDATA)> <!-- AA after the peptide -->
<!ELEMENT MSHits_protlength (%INTEGER;)> <!-- length of protein hit (depricated) -->
<!ELEMENT MSHits_theomass (%INTEGER;)> <!-- scaled theoretical mass of peptide hit -->
<!ELEMENT MSHits_oid (%INTEGER;)> <!-- blast library oid (depricated)  -->
<!ELEMENT MSHitError (%INTEGER;)>
<!ATTLIST MSHitError value (
        none |
        generalerr |
        unable2read |
        notenuffpeaks ) #IMPLIED >
<!--
    unable2read -  can't read the spectrum
    notenuffpeaks -  not enough peaks to search
-->

<!ELEMENT MSUserAnnot (%INTEGER;)>
<!ATTLIST MSUserAnnot value (
        none |
        delete |
        flag ) #IMPLIED >


<!ELEMENT MSHitSet (
        MSHitSet_number, 
        MSHitSet_error?, 
        MSHitSet_hits?, 
        MSHitSet_ids?, 
        MSHitSet_namevalue?, 
        MSHitSet_settingid?, 
        MSHitSet_userannotation?)>

<!ELEMENT MSHitSet_number (%INTEGER;)> <!-- unique number of spectrum -->
<!ELEMENT MSHitSet_error (MSHitError)> <!-- error, if any -->
<!ELEMENT MSHitSet_hits (MSHits*)> <!-- set of hit to spectrum -->
<!ELEMENT MSHitSet_ids (MSHitSet_ids_E*)> <!-- filenames or other ids of spectra searched -->
<!ELEMENT MSHitSet_ids_E (#PCDATA)>
<!ELEMENT MSHitSet_namevalue (NameValue*)> <!-- extra info: retention times, etc. -->
<!ELEMENT MSHitSet_settingid (%INTEGER;)> <!-- id of the search setting used -->
<!ELEMENT MSHitSet_userannotation (MSUserAnnot)> <!-- allows users to flag certain -->
<!ELEMENT MSResponseError (%INTEGER;)>
<!ATTLIST MSResponseError value (
        none |
        generalerr |
        noblastdb |
        noinput ) #IMPLIED >
<!--
    noblastdb -  unable to open blast library
    noinput -  input missing
-->


<!ELEMENT MSBioseq (
        MSBioseq_oid, 
        MSBioseq_seq)>

<!ELEMENT MSBioseq_oid (%INTEGER;)> <!-- blast library oid -->
<!ELEMENT MSBioseq_seq (Bioseq)>
<!ELEMENT MSBioseqSet (MSBioseq*)>

<!ELEMENT MSResponse (
        MSResponse_hitsets, 
        MSResponse_scale?, 
        MSResponse_rid?, 
        MSResponse_error?, 
        MSResponse_version?, 
        MSResponse_email?, 
        MSResponse_dbversion?, 
        MSResponse_bioseqs?)>

<!ELEMENT MSResponse_hitsets (MSHitSet*)> <!-- hits grouped by spectrum -->
<!ELEMENT MSResponse_scale (%INTEGER;)> <!-- scale to change m/z float to integer -->
<!ELEMENT MSResponse_rid (#PCDATA)> <!-- request id -->
<!ELEMENT MSResponse_error (MSResponseError)> <!-- error response -->
<!ELEMENT MSResponse_version (#PCDATA)> <!-- version of OMSSA -->
<!ELEMENT MSResponse_email (#PCDATA)> <!-- email address for notification -->
<!ELEMENT MSResponse_dbversion (%INTEGER;)> <!-- version of db searched (usually size) -->
<!ELEMENT MSResponse_bioseqs (MSBioseqSet)> <!-- sequences found in search      -->

<!ELEMENT MSSearch (
        MSSearch_request?, 
        MSSearch_response?)>

<!ELEMENT MSSearch_request (MSRequest*)>
<!ELEMENT MSSearch_response (MSResponse*)>

