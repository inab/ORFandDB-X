<!-- ============================================
     ::DATATOOL:: Generated from "id2.asn"
     ::DATATOOL:: by application DATATOOL version 1.5.0
     ::DATATOOL:: on 06/06/2006 23:03:48
     ============================================ -->

<!-- ============================================ -->
<!-- This section is mapped from module "NCBI-ID2Access"
================================================= -->
<!--
$Revision: 1.19 $
********************************************************************

  Network Id server network access
  Vasilchenko 2003


*********************************************************************

  ID2.asn

     messages for id server network access

*********************************************************************
-->
<!-- Elements referenced from other modules:
          Seq-id,
          Seq-loc FROM NCBI-Seqloc,
          ID2S-Chunk-Id,
          ID2S-Seq-annot-Info FROM NCBI-Seq-split -->

<!-- ============================================ -->


<!--
*********************************************************************
 request types
*********************************************************************
 Requests are sent in packets to allow sending several requests at once
 to avoid network latency, without possiblity of deadlock with server.
 Server will not start sending replies until it will read the whole packet.
-->

<!ELEMENT ID2-Request-Packet (ID2-Request*)>

<!ELEMENT ID2-Request (
        ID2-Request_serial-number?, 
        ID2-Request_params?, 
        ID2-Request_request)>

<!ELEMENT ID2-Request_serial-number (%INTEGER;)>
<!ELEMENT ID2-Request_params (ID2-Params)>

<!ELEMENT ID2-Request_request (
        ID2-Request_request_init | 
        ID2-Request_request_get-packages | 
        ID2-Request_request_get-seq-id | 
        ID2-Request_request_get-blob-id | 
        ID2-Request_request_get-blob-info | 
        ID2-Request_request_reget-blob | 
        ID2-Request_request_get-chunks)>

<!ELEMENT ID2-Request_request_init EMPTY>
<!ELEMENT ID2-Request_request_get-packages (ID2-Request-Get-Packages)>
<!ELEMENT ID2-Request_request_get-seq-id (ID2-Request-Get-Seq-id)>
<!ELEMENT ID2-Request_request_get-blob-id (ID2-Request-Get-Blob-Id)>
<!ELEMENT ID2-Request_request_get-blob-info (ID2-Request-Get-Blob-Info)>
<!ELEMENT ID2-Request_request_reget-blob (ID2-Request-ReGet-Blob)>
<!ELEMENT ID2-Request_request_get-chunks (ID2S-Request-Get-Chunks)>

<!ELEMENT ID2-Request-Get-Packages (
        ID2-Request-Get-Packages_names?, 
        ID2-Request-Get-Packages_no-contents?)>

<!ELEMENT ID2-Request-Get-Packages_names (ID2-Request-Get-Packages_names_E*)>
<!ELEMENT ID2-Request-Get-Packages_names_E (#PCDATA)>
<!ELEMENT ID2-Request-Get-Packages_no-contents EMPTY>

<!ELEMENT ID2-Request-Get-Seq-id (
        ID2-Request-Get-Seq-id_seq-id, 
        ID2-Request-Get-Seq-id_seq-id-type?)>

<!ELEMENT ID2-Request-Get-Seq-id_seq-id (ID2-Seq-id)>
<!ELEMENT ID2-Request-Get-Seq-id_seq-id-type (%INTEGER;)>
<!ATTLIST ID2-Request-Get-Seq-id_seq-id-type value (
        any |
        gi |
        text |
        general |
        all ) #IMPLIED >
<!--
    any -  return any qualified Seq-id
    gi -  gi is preferred
    text -  text Seq-id (accession etc) is preferred
    general -  general Seq-id is preferred
    all -  return all qualified Seq-ids of the sequence
-->


<!ELEMENT ID2-Seq-id (
        ID2-Seq-id_string | 
        ID2-Seq-id_seq-id)>

<!ELEMENT ID2-Seq-id_string (#PCDATA)>
<!ELEMENT ID2-Seq-id_seq-id (Seq-id)>

<!ELEMENT ID2-Request-Get-Blob-Id (
        ID2-Request-Get-Blob-Id_seq-id, 
        ID2-Request-Get-Blob-Id_sources?, 
        ID2-Request-Get-Blob-Id_external?)>

<!ELEMENT ID2-Request-Get-Blob-Id_seq-id (ID2-Request-Get-Seq-id)>
<!ELEMENT ID2-Request-Get-Blob-Id_sources (ID2-Request-Get-Blob-Id_sources_E*)>
<!ELEMENT ID2-Request-Get-Blob-Id_sources_E (#PCDATA)>
<!ELEMENT ID2-Request-Get-Blob-Id_external EMPTY>

<!ELEMENT ID2-Request-Get-Blob-Info (
        ID2-Request-Get-Blob-Info_blob-id, 
        ID2-Request-Get-Blob-Info_get-seq-ids?, 
        ID2-Request-Get-Blob-Info_get-data?)>


<!ELEMENT ID2-Request-Get-Blob-Info_blob-id (
        ID2-Request-Get-Blob-Info_blob-id_blob-id | 
        ID2-Request-Get-Blob-Info_blob-id_resolve)>

<!ELEMENT ID2-Request-Get-Blob-Info_blob-id_blob-id (ID2-Blob-Id)>

<!ELEMENT ID2-Request-Get-Blob-Info_blob-id_resolve (
        ID2-Request-Get-Blob-Info_blob-id_resolve_request, 
        ID2-Request-Get-Blob-Info_blob-id_resolve_exclude-blobs?)>

<!ELEMENT ID2-Request-Get-Blob-Info_blob-id_resolve_request (ID2-Request-Get-Blob-Id)>
<!ELEMENT ID2-Request-Get-Blob-Info_blob-id_resolve_exclude-blobs (ID2-Blob-Id*)>
<!ELEMENT ID2-Request-Get-Blob-Info_get-seq-ids EMPTY>
<!ELEMENT ID2-Request-Get-Blob-Info_get-data (ID2-Get-Blob-Details)>

<!ELEMENT ID2-Request-ReGet-Blob (
        ID2-Request-ReGet-Blob_blob-id, 
        ID2-Request-ReGet-Blob_split-version, 
        ID2-Request-ReGet-Blob_offset)>

<!ELEMENT ID2-Request-ReGet-Blob_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2-Request-ReGet-Blob_split-version (%INTEGER;)>
<!ELEMENT ID2-Request-ReGet-Blob_offset (%INTEGER;)>

<!ELEMENT ID2S-Request-Get-Chunks (
        ID2S-Request-Get-Chunks_blob-id, 
        ID2S-Request-Get-Chunks_chunks, 
        ID2S-Request-Get-Chunks_split-version?)>

<!ELEMENT ID2S-Request-Get-Chunks_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2S-Request-Get-Chunks_chunks (ID2S-Chunk-Id*)>
<!ELEMENT ID2S-Request-Get-Chunks_split-version (%INTEGER;)>

<!ELEMENT ID2-Get-Blob-Details (
        ID2-Get-Blob-Details_location?, 
        ID2-Get-Blob-Details_seq-class-level?, 
        ID2-Get-Blob-Details_descr-level?, 
        ID2-Get-Blob-Details_descr-type-mask?, 
        ID2-Get-Blob-Details_annot-type-mask?, 
        ID2-Get-Blob-Details_feat-type-mask?, 
        ID2-Get-Blob-Details_sequence-level?)>

<!ELEMENT ID2-Get-Blob-Details_location (Seq-loc)>
<!ELEMENT ID2-Get-Blob-Details_seq-class-level (%INTEGER;)>
<!ELEMENT ID2-Get-Blob-Details_descr-level (%INTEGER;)>
<!ELEMENT ID2-Get-Blob-Details_descr-type-mask (%INTEGER;)>
<!ELEMENT ID2-Get-Blob-Details_annot-type-mask (%INTEGER;)>
<!ELEMENT ID2-Get-Blob-Details_feat-type-mask (%INTEGER;)>
<!ELEMENT ID2-Get-Blob-Details_sequence-level %ENUM;>
<!ATTLIST ID2-Get-Blob-Details_sequence-level value (
        none |
        seq-map |
        seq-data ) #REQUIRED >
<!--
    none -  not required
    seq-map -  at least seq-map
    seq-data -  include seq-data
-->


<!ELEMENT ID2-Reply (
        ID2-Reply_serial-number?, 
        ID2-Reply_params?, 
        ID2-Reply_error?, 
        ID2-Reply_end-of-reply?, 
        ID2-Reply_reply, 
        ID2-Reply_discard?)>

<!ELEMENT ID2-Reply_serial-number (%INTEGER;)>
<!ELEMENT ID2-Reply_params (ID2-Params)>
<!ELEMENT ID2-Reply_error (ID2-Error*)>
<!ELEMENT ID2-Reply_end-of-reply EMPTY>

<!ELEMENT ID2-Reply_reply (
        ID2-Reply_reply_init | 
        ID2-Reply_reply_empty | 
        ID2-Reply_reply_get-package | 
        ID2-Reply_reply_get-seq-id | 
        ID2-Reply_reply_get-blob-id | 
        ID2-Reply_reply_get-blob-seq-ids | 
        ID2-Reply_reply_get-blob | 
        ID2-Reply_reply_reget-blob | 
        ID2-Reply_reply_get-split-info | 
        ID2-Reply_reply_get-chunk)>

<!ELEMENT ID2-Reply_reply_init EMPTY>
<!ELEMENT ID2-Reply_reply_empty EMPTY>
<!ELEMENT ID2-Reply_reply_get-package (ID2-Reply-Get-Package)>
<!ELEMENT ID2-Reply_reply_get-seq-id (ID2-Reply-Get-Seq-id)>
<!ELEMENT ID2-Reply_reply_get-blob-id (ID2-Reply-Get-Blob-Id)>
<!ELEMENT ID2-Reply_reply_get-blob-seq-ids (ID2-Reply-Get-Blob-Seq-ids)>
<!ELEMENT ID2-Reply_reply_get-blob (ID2-Reply-Get-Blob)>
<!ELEMENT ID2-Reply_reply_reget-blob (ID2-Reply-ReGet-Blob)>
<!ELEMENT ID2-Reply_reply_get-split-info (ID2S-Reply-Get-Split-Info)>
<!ELEMENT ID2-Reply_reply_get-chunk (ID2S-Reply-Get-Chunk)>
<!ELEMENT ID2-Reply_discard %ENUM;>
<!ATTLIST ID2-Reply_discard value (
        reply |
        last-octet-string |
        nothing ) #REQUIRED >
<!--
    reply -  whole reply should be discarded
    last-octet-string -  all data in embedded ID2-Reply-Data
         except last OCTET STRING is correct
    nothing -  all data in embedded ID2-Reply-Data
         is correct, but is incomplete
-->


<!ELEMENT ID2-Error (
        ID2-Error_severity, 
        ID2-Error_retry-delay?, 
        ID2-Error_message?)>

<!ELEMENT ID2-Error_severity %ENUM;>
<!ATTLIST ID2-Error_severity value (
        warning |
        failed-command |
        failed-connection |
        failed-server |
        no-data |
        restricted-data |
        unsupported-command |
        invalid-arguments ) #REQUIRED >

<!ELEMENT ID2-Error_retry-delay (%INTEGER;)>
<!ELEMENT ID2-Error_message (#PCDATA)>

<!ELEMENT ID2-Reply-Get-Package (
        ID2-Reply-Get-Package_name, 
        ID2-Reply-Get-Package_params?)>

<!ELEMENT ID2-Reply-Get-Package_name (#PCDATA)>
<!ELEMENT ID2-Reply-Get-Package_params (ID2-Params)>

<!ELEMENT ID2-Reply-Get-Seq-id (
        ID2-Reply-Get-Seq-id_request, 
        ID2-Reply-Get-Seq-id_seq-id?, 
        ID2-Reply-Get-Seq-id_end-of-reply?)>

<!ELEMENT ID2-Reply-Get-Seq-id_request (ID2-Request-Get-Seq-id)>
<!ELEMENT ID2-Reply-Get-Seq-id_seq-id (Seq-id*)>
<!ELEMENT ID2-Reply-Get-Seq-id_end-of-reply EMPTY>
<!ELEMENT ID2-Blob-State %ENUM;>
<!ATTLIST ID2-Blob-State value (
        live |
        suppressed-temp |
        suppressed |
        dead |
        protected |
        withdrawn ) #REQUIRED >


<!ELEMENT ID2-Reply-Get-Blob-Id (
        ID2-Reply-Get-Blob-Id_seq-id, 
        ID2-Reply-Get-Blob-Id_blob-id?, 
        ID2-Reply-Get-Blob-Id_split-version?, 
        ID2-Reply-Get-Blob-Id_annot-info?, 
        ID2-Reply-Get-Blob-Id_end-of-reply?, 
        ID2-Reply-Get-Blob-Id_blob-state?)>

<!ELEMENT ID2-Reply-Get-Blob-Id_seq-id (Seq-id)>
<!ELEMENT ID2-Reply-Get-Blob-Id_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2-Reply-Get-Blob-Id_split-version (%INTEGER;)>
<!ELEMENT ID2-Reply-Get-Blob-Id_annot-info (ID2S-Seq-annot-Info*)>
<!ELEMENT ID2-Reply-Get-Blob-Id_end-of-reply EMPTY>
<!ELEMENT ID2-Reply-Get-Blob-Id_blob-state (ID2-Blob-State)>

<!ELEMENT ID2-Reply-Get-Blob-Seq-ids (
        ID2-Reply-Get-Blob-Seq-ids_blob-id, 
        ID2-Reply-Get-Blob-Seq-ids_ids?)>

<!ELEMENT ID2-Reply-Get-Blob-Seq-ids_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2-Reply-Get-Blob-Seq-ids_ids (ID2-Reply-Data)>

<!ELEMENT ID2-Reply-Get-Blob (
        ID2-Reply-Get-Blob_blob-id, 
        ID2-Reply-Get-Blob_split-version?, 
        ID2-Reply-Get-Blob_data?)>

<!ELEMENT ID2-Reply-Get-Blob_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2-Reply-Get-Blob_split-version (%INTEGER;)>
<!ELEMENT ID2-Reply-Get-Blob_data (ID2-Reply-Data)>

<!ELEMENT ID2S-Reply-Get-Split-Info (
        ID2S-Reply-Get-Split-Info_blob-id, 
        ID2S-Reply-Get-Split-Info_split-version, 
        ID2S-Reply-Get-Split-Info_data?)>

<!ELEMENT ID2S-Reply-Get-Split-Info_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2S-Reply-Get-Split-Info_split-version (%INTEGER;)>
<!ELEMENT ID2S-Reply-Get-Split-Info_data (ID2-Reply-Data)>

<!ELEMENT ID2-Reply-ReGet-Blob (
        ID2-Reply-ReGet-Blob_blob-id, 
        ID2-Reply-ReGet-Blob_split-version, 
        ID2-Reply-ReGet-Blob_offset, 
        ID2-Reply-ReGet-Blob_data?)>

<!ELEMENT ID2-Reply-ReGet-Blob_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2-Reply-ReGet-Blob_split-version (%INTEGER;)>
<!ELEMENT ID2-Reply-ReGet-Blob_offset (%INTEGER;)>
<!ELEMENT ID2-Reply-ReGet-Blob_data (ID2-Reply-Data)>

<!ELEMENT ID2S-Reply-Get-Chunk (
        ID2S-Reply-Get-Chunk_blob-id, 
        ID2S-Reply-Get-Chunk_chunk-id, 
        ID2S-Reply-Get-Chunk_data?)>

<!ELEMENT ID2S-Reply-Get-Chunk_blob-id (ID2-Blob-Id)>
<!ELEMENT ID2S-Reply-Get-Chunk_chunk-id (ID2S-Chunk-Id)>
<!ELEMENT ID2S-Reply-Get-Chunk_data (ID2-Reply-Data)>

<!ELEMENT ID2-Reply-Data (
        ID2-Reply-Data_data-type?, 
        ID2-Reply-Data_data-format?, 
        ID2-Reply-Data_data-compression?, 
        ID2-Reply-Data_data)>

<!ELEMENT ID2-Reply-Data_data-type (%INTEGER;)>
<!ATTLIST ID2-Reply-Data_data-type value (
        seq-entry |
        seq-annot |
        id2s-split-info |
        id2s-chunk ) #IMPLIED >

<!ELEMENT ID2-Reply-Data_data-format (%INTEGER;)>
<!ATTLIST ID2-Reply-Data_data-format value (
        asn-binary |
        asn-text |
        xml ) #IMPLIED >

<!ELEMENT ID2-Reply-Data_data-compression (%INTEGER;)>
<!ATTLIST ID2-Reply-Data_data-compression value (
        none |
        gzip |
        nlmzip |
        bzip2 ) #IMPLIED >

<!ELEMENT ID2-Reply-Data_data (ID2-Reply-Data_data_E*)>
<!ELEMENT ID2-Reply-Data_data_E (%OCTETS;)>
<!ELEMENT ID2-Blob-Seq-ids (ID2-Blob-Seq-id*)>

<!ELEMENT ID2-Blob-Seq-id (
        ID2-Blob-Seq-id_seq-id, 
        ID2-Blob-Seq-id_replaced?)>

<!ELEMENT ID2-Blob-Seq-id_seq-id (Seq-id)>
<!ELEMENT ID2-Blob-Seq-id_replaced EMPTY>

<!ELEMENT ID2-Blob-Id (
        ID2-Blob-Id_sat, 
        ID2-Blob-Id_sub-sat?, 
        ID2-Blob-Id_sat-key, 
        ID2-Blob-Id_version?)>

<!ELEMENT ID2-Blob-Id_sat (%INTEGER;)>
<!ELEMENT ID2-Blob-Id_sub-sat (%INTEGER;)>
<!ATTLIST ID2-Blob-Id_sub-sat value (
        main |
        snp |
        snp-graph |
        cdd |
        mgc |
        hprd |
        sts |
        trna ) #IMPLIED >

<!ELEMENT ID2-Blob-Id_sat-key (%INTEGER;)>
<!ELEMENT ID2-Blob-Id_version (%INTEGER;)>
<!ELEMENT ID2-Params (ID2-Param*)>

<!ELEMENT ID2-Param (
        ID2-Param_name, 
        ID2-Param_value?, 
        ID2-Param_type?)>

<!ELEMENT ID2-Param_name (#PCDATA)>
<!ELEMENT ID2-Param_value (ID2-Param_value_E*)>
<!ELEMENT ID2-Param_value_E (#PCDATA)>
<!ELEMENT ID2-Param_type %ENUM;>
<!ATTLIST ID2-Param_type value (
        set-value |
        get-value |
        force-value |
        use-package ) #REQUIRED >


